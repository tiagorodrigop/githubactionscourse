name: 'Snyk IaC Test Action' #Executa testes de segurança em Infraestrutura como Código (IaC) usando a ferramenta Snyk.
description: 'Runs Snyk IaC tests'
inputs: #Define as entradas necessárias para a ação. Entradas são parâmetros que o usuário deve fornecer quando a ação é executada. Esses parâmetros configuram a ação para que ela funcione corretamente.
  snyk-token:
    description: 'Token to use Snyk'
    required: true

  github-token: #Token exigido para interagir com a API do GitHub e escrever no PR. 
    description: 'Github token to comment on PR'
    required: true

  pr-number: #Em um repositório GitHub, cada Pull Request tem um número único que o identifica. Este número é essencial para que a ação saiba em qual PR deve atuar. Por exemplo, se a ação precisa adicionar um comentário a um PR, fazer uma verificação de status, ou realizar qualquer outra operação específica em um PR, ela precisa saber qual PR está sendo referenciado — e isso é feito usando o pr-number.
    description: 'The number of the pull request'
    required: true

  snyk-severity: #Este é o nome do input. O nome snyk-severity sugere que essa entrada será usada para capturar o nível de severidade das vulnerabilidades que devem ser consideradas durante a análise de segurança com a ferramenta Snyk.
    description: 'The snky-severity'
    required: false
    default: 'high'

runs:
  using: 'composite' # Especifica que esta ação é uma ação composta. Isso significa que a ação é composta por uma série de etapas (steps), que são executadas em sequência. Uma ação composta permite agrupar várias etapas que normalmente seriam definidas diretamente em um workflow (.yml), possibilitando a reutilização dessas etapas em diferentes workflows.
  steps:
    - name: Checkout code
      uses: actions/checkout@v4 #No caso, está usando a ação oficial actions/checkout na versão v4. Esta ação é amplamente usada em workflows do GitHub Actions e tem a função de baixar o código do repositório GitHub para que ele possa ser utilizado nas etapas subsequentes.

    - name: 'Check for .tf files'
      id: check_tf_files #pode ser usado para referenciar a saída desta etapa em outras partes do workflow.
      shell: bash
      run: | #run: |: Inicia um bloco de comandos que será executado no shell bash.

#Este bloco de comando lista todos os arquivos que correspondem ao padrão *.tf que estão rastreados pelo Git no repositório. Ou seja, ele verifica se há arquivos com a extensão .tf sob controle de versão.
# | grep -q .: Esse comando canaliza (|) a saída de git ls-files para o comando grep. O grep -q . verifica se há qualquer saída do comando anterior (ou seja, se algum arquivo .tf foi encontrado). O -q faz com que o grep funcione em modo silencioso, retornando apenas o status de sucesso ou falha.
# if ...; then: Se git ls-files encontrar arquivos .tf, a condição do if será verdadeira.
# echo "TERRAFORM_FILES_FOUND=true" >> $GITHUB_ENV:
# Se a condição do if for verdadeira (ou seja, se houver arquivos .tf no repositório), este comando define uma variável de ambiente TERRAFORM_FILES_FOUND como true.
# >> $GITHUB_ENV: Escreve essa variável no arquivo de ambiente do GitHub Actions ($GITHUB_ENV), tornando-a disponível para etapas subsequentes no workflow.
# else:

# Define o que acontecerá se a condição do if for falsa (ou seja, se não houver arquivos .tf).
# echo "TERRAFORM_FILES_FOUND=false" >> $GITHUB_ENV:

# Se a condição do if for falsa, este comando define a variável de ambiente TERRAFORM_FILES_FOUND como false.
        if git ls-files '*.tf' | grep -q .; then
          echo "TERRAFORM_FILES_FOUND=true" >> $GITHUB_ENV
        else
          echo "TERRAFORM_FILES_FOUND=false" >> $GITHUB_ENV
        fi

    - name: Get .snyk file #Este trecho de código é uma etapa de uma GitHub Action que tenta obter um arquivo .snyk de um bucket S3 da Amazon Web Services (AWS). O arquivo .snyk geralmente é usado para definir políticas de ignorância para a ferramenta Snyk, que realiza análises de segurança em projetos.
      continue-on-error: true
      shell: bash
      run: |
        if aws s3api head-object --bucket snyk-iac-test --key ${{ github.event.repository.name }}/.snyk ; then
          mkdir snyk-ignore
          aws s3 cp s3://snyk-iac-test/${{ github.event.repository.name }}/.snyk ./snyk-ignore
          echo "Fetched .snyk ignore policy file for ${{ github.event.repository.name }}"
        else
          echo "No .snyk ignore policy file found"
        fi

    - name: Set up Python
      uses: actions/setup-python@v4 #Especifica que a etapa usará uma ação pré-definida disponível no GitHub Actions Marketplace. A ação actions/setup-python@v4 é uma ação oficial do GitHub que configura o ambiente Python na versão especificada para ser usada no workflow.
      if: ${{ env.TERRAFORM_FILES_FOUND == 'true' }}
      with:
        python-version: '3.x'

    - name: 'Set up Node.js' 
      if: ${{ env.TERRAFORM_FILES_FOUND == 'true' }} # Verifica se encontra arquivos terraform. 
      uses: actions/setup-node@v4 #configura o ambiente Node.js com a action oficial do github na versão4.
      with:
        node-version: '22.4.1'

    - name: Install Snyk CLI
      if: ${{ env.TERRAFORM_FILES_FOUND == 'true' }}
      shell: bash
      run: npm install -g snyk #Instala o Snyk CLI via NPM.

    - name: 'Authenticate Snyk CLI'
      if: ${{ env.TERRAFORM_FILES_FOUND == 'true' }}
      shell: bash
      env:
        SNYK_TOKEN: ${{inputs.snyk-token}} #Define a variável de ambiente SNYK_TOKEN com o valor fornecido pelo input snyk-token. Esse token é essencial para autenticar o Snyk CLI.
      run: snyk auth $SNYK_TOKEN

    - name: Run severity level script
      id: run-severity-script
      shell: bash
      run: |
        python ${GITHUB_ACTION_PATH}/scripts/severity_level.py ${{ inputs.snyk-severity }} > severity_result.txt
        SEVERITY_LEVEL=$(grep -oP 'SEVERITY_RESULT:\s*\K\S+' severity_result.txt)
        echo "SEVERITY_LEVEL=${SEVERITY_LEVEL}" >> $GITHUB_ENV

    - name: Get Snyk IaC Scan Full Report
      id: snyk-full-report
      shell: bash
      if: ${{ env.TERRAFORM_FILES_FOUND == 'true' }}
      run: |
        snyk iac test --severity-threshold=low > snyk_output.txt || true
        echo "Snyk test output:"
        cat snyk_output.txt
        
    - name: Add Snyk Iac Scan Full Report in the PR
      uses: actions/github-script@v6
      if: ${{ env.TERRAFORM_FILES_FOUND == 'true' }}
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          const fs = require('fs');
          const output = fs.readFileSync('snyk_output.txt', 'utf8');
          github.rest.issues.createComment({
            issue_number: ${{ inputs.pr-number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `### Snyk Full Report:\n\`\`\`\n${output}\n\`\`\``
          });

    - name: Run Snyk Test
      shell: bash
      if: ${{ env.TERRAFORM_FILES_FOUND == 'true' }}
      run: |
        snyk iac test --severity-threshold=${{ env.SEVERITY_LEVEL }}